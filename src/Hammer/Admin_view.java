/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Hammer;

import java.net.URL;
import java.sql.*;
import javax.sound.sampled.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mohit
 */
public class Admin_view extends javax.swing.JFrame {
    
    static Connection con = null;
    DefaultTableModel model , model1 , model2 , model3;
    int temp;
    
    /**
     * Creates new form Admin_view
     */
    public Admin_view() {
        initComponents();
        jTextField2.requestFocusInWindow();
        setLocationRelativeTo(null);
        
        model = (DefaultTableModel)jTable1.getModel();
        model1 = (DefaultTableModel)jTable2.getModel();
        model2 = (DefaultTableModel)jTable3.getModel();
        model3 = (DefaultTableModel)jTable4.getModel();
       
       buttonGroup1.add(jRadioButton1);
       buttonGroup1.add(jRadioButton2);
       buttonGroup2.add(jRadioButton3);
       buttonGroup2.add(jRadioButton4);
        
        jScrollPane1.setVisible(false);
        jButton2.setVisible(false);
        jPanel1.setVisible(false);
        jButton9.setVisible(false);
        jPanel9.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton15 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton17 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hammer Mania - Admin View");
        setBackground(java.awt.Color.white);
        setResizable(false);

        jTabbedPane1.setBackground(java.awt.Color.white);
        jTabbedPane1.setOpaque(true);

        jPanel2.setLayout(null);

        jButton1.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton1.setText("Search");
        jButton1.setToolTipText("Click here to start searching");
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton1KeyReleased(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(420, 180, 73, 23);

        jTextField1.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(153, 255, 0));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Enter Text here");
        jTextField1.setToolTipText("Enter Name of the user you want to search");
        jTextField1.setBorder(null);
        jTextField1.setName(""); // NOI18N
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextField1MousePressed(evt);
            }
        });
        jPanel2.add(jTextField1);
        jTextField1.setBounds(400, 110, 110, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User_No", "Name", "Age", "Gender"
            }
        ));
        jTable1.setToolTipText("Your results will  display here");
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 70, 310, 160);

        jButton2.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton2.setText("Click to check status");
        jButton2.setToolTipText("Click here to check the status of particular user");
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton2KeyReleased(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(30, 300, 140, 30);

        jPanel1.setBackground(java.awt.Color.white);

        jLabel6.setText("User_No");

        jLabel8.setText("Games Played");

        jLabel10.setText("Status");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel1);
        jPanel1.setBounds(190, 270, 180, 110);

        jButton3.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton3.setText("Check User Information");
        jButton3.setToolTipText("Check list of all existing user");
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton3KeyReleased(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(40, 30, 160, 23);

        jButton14.setBackground(java.awt.Color.white);
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hammer/back.png"))); // NOI18N
        jButton14.setToolTipText("Back to Home Page");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jButton14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton14KeyReleased(evt);
            }
        });
        jPanel2.add(jButton14);
        jButton14.setBounds(0, 0, 40, 30);

        jLabel1.setBackground(java.awt.Color.white);
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hammer/panda3.png"))); // NOI18N
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setOpaque(true);
        jPanel2.add(jLabel1);
        jLabel1.setBounds(0, 0, 528, 390);

        jTabbedPane1.addTab("Check User Information", jPanel2);

        jPanel3.setLayout(null);

        jPanel7.setBackground(java.awt.Color.white);

        jLabel12.setText("Enter User Name");

        jButton4.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton4.setText("Submit");
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton4KeyReleased(evt);
            }
        });

        jLabel13.setText("Enter User Age");

        jLabel14.setText("Gender");

        jRadioButton1.setText("Male");
        jRadioButton1.setOpaque(false);

        jRadioButton2.setText("Female");
        jRadioButton2.setOpaque(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(109, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGap(70, 70, 70)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 69, Short.MAX_VALUE)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(20, 20, 20)
                    .addComponent(jLabel13)
                    .addGap(26, 26, 26)
                    .addComponent(jLabel14)
                    .addGap(66, 66, 66)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel3.add(jPanel7);
        jPanel7.setBounds(290, 20, 230, 340);

        jButton15.setBackground(java.awt.Color.white);
        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hammer/back.png"))); // NOI18N
        jButton15.setToolTipText("Back to Home Page");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jButton15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton15KeyReleased(evt);
            }
        });
        jPanel3.add(jButton15);
        jButton15.setBounds(0, 0, 40, 30);

        jLabel2.setBackground(java.awt.Color.white);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hammer/working.png"))); // NOI18N
        jLabel2.setOpaque(true);
        jPanel3.add(jLabel2);
        jLabel2.setBounds(0, 0, 530, 390);

        jTabbedPane1.addTab("Add New User", jPanel3);

        jPanel4.setLayout(null);

        jButton5.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton5.setText("Show Current User");
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton5KeyReleased(evt);
            }
        });
        jPanel4.add(jButton5);
        jButton5.setBounds(320, 40, 150, 23);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User_No", "Name", "Age", "Gender"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel4.add(jScrollPane2);
        jScrollPane2.setBounds(290, 80, 240, 140);

        jButton6.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton6.setText("Remove User");
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton6KeyReleased(evt);
            }
        });
        jPanel4.add(jButton6);
        jButton6.setBounds(330, 250, 120, 30);

        jButton16.setBackground(java.awt.Color.white);
        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hammer/back.png"))); // NOI18N
        jButton16.setToolTipText("Back to Home Page");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jButton16.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton16KeyReleased(evt);
            }
        });
        jPanel4.add(jButton16);
        jButton16.setBounds(0, 0, 40, 30);

        jLabel3.setBackground(java.awt.Color.white);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hammer/working.png"))); // NOI18N
        jLabel3.setOpaque(true);
        jPanel4.add(jLabel3);
        jLabel3.setBounds(0, 0, 528, 390);

        jTabbedPane1.addTab("Remove Existing User", jPanel4);

        jPanel5.setLayout(null);

        jButton7.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton7.setText("Show Current User");
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jButton7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton7KeyReleased(evt);
            }
        });
        jPanel5.add(jButton7);
        jButton7.setBounds(320, 40, 150, 23);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User_No", "Name", "Age", "Gender"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jPanel5.add(jScrollPane3);
        jScrollPane3.setBounds(280, 80, 240, 140);

        jButton17.setBackground(java.awt.Color.white);
        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hammer/back.png"))); // NOI18N
        jButton17.setToolTipText("Back to Home Page");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jButton17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton17KeyReleased(evt);
            }
        });
        jPanel5.add(jButton17);
        jButton17.setBounds(0, 0, 40, 30);

        jPanel8.setBackground(java.awt.Color.white);

        jButton9.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton9.setText("Update");
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jButton9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton9KeyReleased(evt);
            }
        });

        jLabel15.setText(" Name");

        jLabel16.setText("Age");

        jLabel17.setText("Gender");

        jRadioButton3.setText("Male");
        jRadioButton3.setOpaque(false);

        jRadioButton4.setText("Female");
        jRadioButton4.setOpaque(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addGap(168, 168, 168))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                .addComponent(jTextField4))
                            .addComponent(jRadioButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jButton9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jRadioButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jRadioButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton9)
                .addGap(6, 6, 6))
        );

        jPanel5.add(jPanel8);
        jPanel8.setBounds(300, 240, 210, 140);

        jLabel4.setBackground(java.awt.Color.white);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hammer/working.png"))); // NOI18N
        jLabel4.setOpaque(true);
        jPanel5.add(jLabel4);
        jLabel4.setBounds(0, 0, 528, 390);

        jTabbedPane1.addTab("Update User Information", jPanel5);

        jPanel6.setLayout(null);

        jButton10.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton10.setText("Show List of Admins");
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jButton10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton10KeyReleased(evt);
            }
        });
        jPanel6.add(jButton10);
        jButton10.setBounds(40, 30, 160, 30);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User_No", "Name", "Password"
            }
        ));
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jPanel6.add(jScrollPane4);
        jScrollPane4.setBounds(280, 10, 230, 130);

        jButton8.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton8.setText("Add new Admin");
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jButton8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton8KeyReleased(evt);
            }
        });
        jPanel6.add(jButton8);
        jButton8.setBounds(40, 70, 160, 30);

        jPanel9.setOpaque(false);

        jLabel18.setBackground(java.awt.Color.white);
        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setForeground(java.awt.Color.white);
        jLabel18.setText("User_No");

        jLabel19.setBackground(java.awt.Color.white);
        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setForeground(java.awt.Color.white);
        jLabel19.setText("Name");

        jLabel20.setBackground(java.awt.Color.white);
        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setForeground(java.awt.Color.white);
        jLabel20.setText("Password");

        jButton11.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton11.setText("Update");
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jButton11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton11KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(31, 31, 31))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel9);
        jPanel9.setBounds(240, 160, 210, 160);

        jButton12.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton12.setText("Update Admin Info");
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jButton12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton12KeyReleased(evt);
            }
        });
        jPanel6.add(jButton12);
        jButton12.setBounds(40, 110, 160, 30);

        jButton13.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton13.setText("Remove Admin ");
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jButton13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton13KeyReleased(evt);
            }
        });
        jPanel6.add(jButton13);
        jButton13.setBounds(40, 150, 160, 30);

        jButton18.setBackground(java.awt.Color.white);
        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hammer/back.png"))); // NOI18N
        jButton18.setToolTipText("Back to Home Page");
        jButton18.setOpaque(false);
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jButton18.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton18KeyReleased(evt);
            }
        });
        jPanel6.add(jButton18);
        jButton18.setBounds(0, 0, 40, 30);

        jLabel5.setBackground(java.awt.Color.white);
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hammer/0577bc2124864ed40a12bee1b4ca891b.jpg"))); // NOI18N
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel6.add(jLabel5);
        jLabel5.setBounds(0, 0, 528, 390);

        jTabbedPane1.addTab("Update Admin Status", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        temp = 1;
        sound();

        if(jTextField1.getText().equals("")  || jTextField1.getText().equals("Enter Text here"))
        {
            JOptionPane.showMessageDialog(null, "Please Enter Name of the user");
        }
        else
        {
            model.setRowCount(0);
            
            new Database_Connection();
            
            try
            {
                int count=0;
                Statement s = Database_Connection.con.createStatement();
                ResultSet rs = s.executeQuery("select * from user_info where Name Like '"+jTextField1.getText()+"%' ");
                while(rs.next())
                {
                    model.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("age") , rs.getString("gender")});
                    count++;
                }
                if(count  ==0)
                {
                    JOptionPane.showMessageDialog(null, "No Results Found");
                }
                else
                {
                    jScrollPane1.setVisible(true);
                    JOptionPane.showMessageDialog(null, "Check your results in table");
                }   
            }
            catch(Exception e)
            {
                System.out.println("Error because of: "+e);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        jButton2.setVisible(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MousePressed
        jScrollPane1.setVisible(false);
        jButton2.setVisible(false);
        jPanel1.setVisible(false);
    }//GEN-LAST:event_jTextField1MousePressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        temp = 1;
        sound();
        
        new Database_Connection();
        try
        {
            int row = jTable1.getSelectedRow();
            String User_No = (String)model.getValueAt(row, 0);
            Statement s = Database_Connection.con.createStatement();
            ResultSet rs = s.executeQuery("select * from user_status where User_No = '"+User_No+"' ");
            while(rs.next())
            {
                jLabel7.setText(rs.getString("User_NO"));
                jLabel9.setText(rs.getString("games_played"));
                jLabel11.setText(rs.getString("status"));
            }        
            jPanel1.setVisible(true);
        }
        catch(Exception e)
        {
            System.out.println("Error because of: "+e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
            temp = 1;
            sound();
        
            model.setRowCount(0);
            
            new Database_Connection();
            
            try
            {
                int count=0;
                Statement s = Database_Connection.con.createStatement();
                ResultSet rs = s.executeQuery("select * from user_info ");
                while(rs.next())
                {
                    model.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("age") , rs.getString("gender")});
                    count++;
                }
                if(count  ==0)
                {
                    JOptionPane.showMessageDialog(null, "No Results Found");
                }
                else
                {
                    jScrollPane1.setVisible(true);
                    JOptionPane.showMessageDialog(null, "Check your results in table");
                }   
            }
            catch(Exception e)
            {
                System.out.println("Error because of: "+e);
            }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(jTextField2.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter your Name");
        }
        else if(jTextField3.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter your Age");
        }
        else if(!jRadioButton1.isSelected() && !jRadioButton2.isSelected())
        {
            JOptionPane.showMessageDialog(null, "Please Select your gender");
        }
        else
        {
            temp = 1;
            sound();
            
            int count = 10001 , games_played=0;
            String gender , status="Not Started";
            if(jRadioButton1.isSelected())
            {
                gender = "Male";
            }
            else
            {
                gender = "Female";
            }
            
            new Database_Connection();
            try
            {
                Statement s = Database_Connection.con.createStatement();
                
                ResultSet rs = s.executeQuery("Select * from user_info");
                while(rs.next())
                {
                    count++;
                }
                s.executeUpdate(" insert into user_info(User_No , Name , age ,gender ) values ('"+count+"' ,'"+jTextField2.getText()+"' , '"+jTextField3.getText()+"' , '"+gender+"') ");
                s.executeUpdate(" insert into user_status(User_No , games_played , status ) values ('"+count+"' , '"+games_played+"' , '"+status+"' ) ");
                JOptionPane.showMessageDialog(null,"Your User_No is: "+count + ". Keep it remember");
                
                jTextField2.setText("");
                jTextField3.setText("");
                jRadioButton1.setSelected(false);
                jRadioButton2.setSelected(false);    
            }
            catch(Exception e)
            {
                System.out.println("Error because of: "+e);
            }        
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        temp = 1;
        sound();
            model1.setRowCount(0);
            
            new Database_Connection();
            
            try
            {
                int count=0;
                Statement s = Database_Connection.con.createStatement();
                ResultSet rs = s.executeQuery("select * from user_info ");
                while(rs.next())
                {
                    model1.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("age") , rs.getString("gender")});
                    count++;
                }
                if(count  ==0)
                {
                    JOptionPane.showMessageDialog(null, "No Results Found");
                }
                else
                {
                    jScrollPane1.setVisible(true);
                    JOptionPane.showMessageDialog(null, "Check your results in table");
                }   
            }
            catch(Exception e)
            {
                System.out.println("Error because of: "+e);
            }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        temp = 1;
        sound();
        
        int row = jTable2.getSelectedRow();
        String User_No = (String)model1.getValueAt(row, 0);
        int count= 0; 
        
        new Database_Connection();
        try
        {
            Statement s = Database_Connection.con.createStatement();          
            s.executeUpdate("delete   from user_info  where User_No = '"+User_No+"' ");        
            s.executeUpdate("delete   from user_status  where User_No = '"+User_No+"' ");
          
            model1.setRowCount(0);          
            ResultSet rs = s.executeQuery("select * from user_info");
            while(rs.next())
            {
                model1.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("age") , rs.getString("gender")});
                count++;
            }
            if(count==0)
            {
                JOptionPane.showMessageDialog(null, "Table is Empty now");
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Check updated results in table");
            }
        }
        catch(Exception e)
        {
            System.out.println("Error because of: "+e);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        temp = 1;
        sound();
        model2.setRowCount(0);

        new Database_Connection();

        try
        {
            int count=0;
            Statement s = Database_Connection.con.createStatement();
            ResultSet rs = s.executeQuery("select * from user_info ");
            while(rs.next())
            {
                model2.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("age") , rs.getString("gender")});
                count++;
            }
            if(count  ==0)
            {
                JOptionPane.showMessageDialog(null, "No Results Found");
            }
            else
            {
                jScrollPane1.setVisible(true);
                JOptionPane.showMessageDialog(null, "Check your results in table");
            }   
        }
        catch(Exception e)
        {
            System.out.println("Error because of: "+e);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        int row = jTable3.getSelectedRow();
        
        jTextField4.setText((String)model2.getValueAt(row, 1));
        jTextField5.setText((String)model2.getValueAt(row, 2));
        String gender = (String)model2.getValueAt(row, 3);
        if(gender.equals("Male"))
        {
            jRadioButton3.setSelected(true);
            jRadioButton4.setSelected(false);
        }
        else
        {
            jRadioButton3.setSelected(false);
            jRadioButton4.setSelected(true);
        }
        jButton9.setVisible(true);
    }//GEN-LAST:event_jTable3MouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        temp = 1;
        sound();
        
        if(jTextField4.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter your Name");
        }
        else if(jTextField5.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter your Age");
        }
        else if(!jRadioButton3.isSelected() && !jRadioButton4.isSelected())
        {
            JOptionPane.showMessageDialog(null, "Please Select your gender");
        }
        else
        {
            String gender;

            int row = jTable3.getSelectedRow();
            String User_No = (String)model2.getValueAt(row, 0);
            new Database_Connection();
            if(jRadioButton3.isSelected())
            {
                gender = "Male";
            }
            else
            {
                gender = "Female";
            }
            try
            {
                Statement s = Database_Connection.con.createStatement();

                s.executeUpdate("update user_info set Name = '"+jTextField4.getText()+"' , Age = '"+jTextField5.getText()+"' , gender = '"+gender+"' where user_no = '"+User_No+"' ");

                model2.setRowCount(0);          
                ResultSet rs = s.executeQuery("select * from user_info");
                while(rs.next())
                {
                    model2.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("age") , rs.getString("gender")});
                }
                JOptionPane.showMessageDialog(null, "Check updated results in table");
            }
            catch(Exception e)
            {
                System.err.println("Error because of: "+e);
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        temp = 1;
        sound(); 
        model3.setRowCount(0);

        new Database_Connection();

        try
        {
            int count=0;
            Statement s = Database_Connection.con.createStatement();
            ResultSet rs = s.executeQuery("select * from admin_info ");
            while(rs.next())
            {
                model3.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("Password") });
                count++;
            }
            if(count  ==0)
            {
                JOptionPane.showMessageDialog(null, "No Results Found");
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Check your results in table");
            }   
        }
        catch(Exception e)
        {
            System.out.println("Error because of: "+e);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        temp = 1;
        sound();
        
        jPanel9.setVisible(true);
            jButton11.setText("Add");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if(jButton11.getText().equals("Add"))
        {
            if(jTextField6.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please enter your User_No");
            }
            else if(jTextField7.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please enter your Name");
            }
            else if(jTextField8.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please enter your Password");
            }
            else
            {
                temp = 1;
                sound();
            
                new Database_Connection();
                try
                {
                    Statement s = Database_Connection.con.createStatement();

                    s.executeUpdate(" insert into admin_info(User_No , Name , password ) values ('"+jTextField6.getText()+"' ,'"+jTextField7.getText()+"' , '"+jTextField8.getText()+"' ) ");
                    JOptionPane.showMessageDialog(null,"New Admin Added");
                    
                    model3.setRowCount(0);
                    ResultSet rs = s.executeQuery("select * from admin_info ");
                    while(rs.next())
                    {
                        model3.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("Password") });
                    }
                    
                    jTextField6.setText("");
                    jTextField7.setText("");
                    jTextField8.setText("");
                }
                catch(Exception e)
                {
                    System.out.println("Error because of: "+e);
                }        
            }
        }
        if(jButton11.getText().equals("Update"))
        {
            int row = jTable4.getSelectedRow();
            String User_No = (String)model3.getValueAt(row, 0);
            
            new Database_Connection();
            try
            {
                Statement s = Database_Connection.con.createStatement();

                s.executeUpdate("update admin_info set User_No = '"+jTextField6.getText()+"' , name = '"+jTextField7.getText()+"' , password = '"+jTextField8.getText()+"' where user_no = '"+User_No+"' ");
                model3.setRowCount(0);          
                ResultSet rs = s.executeQuery("select * from admin_info");
                while(rs.next())
                {
                    model3.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("password") });
                }
                
                jTextField6.setText("");
                jTextField7.setText("");
                jTextField8.setText("");
                
                JOptionPane.showMessageDialog(null, "Check updated results in table");
            }
            catch(Exception e)
            {
                System.err.println("Error because of: "+e);
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        temp = 1;
        sound();

        jPanel9.setVisible(true);
        jButton11.setText("Update");
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        temp = 1;
        sound();
        
        int row_count = jTable4.getRowCount();
        if(row_count <= 1)
        {
            JOptionPane.showMessageDialog(null, "You cannot remove all admin accounts");
        }
        else
        {
            int row = jTable4.getSelectedRow();
            String User_No = (String)model3.getValueAt(row, 0);

            new Database_Connection();
            try
            {
                Statement s = Database_Connection.con.createStatement();          
                s.executeUpdate("delete   from admin_info  where User_No = '"+User_No+"' ");        

                model3.setRowCount(0);          
                ResultSet rs = s.executeQuery("select * from admin_info");
                while(rs.next())
                {
                    model3.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("password") });  
                }
                JOptionPane.showMessageDialog(null, "Check updated results in table");
            }
            catch(Exception e)
            {
                System.out.println("Error because of: "+e);
            }
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        int row = jTable4.getSelectedRow();
        jTextField6.setText((String)model3.getValueAt(row, 0));
        jTextField7.setText((String)model3.getValueAt(row, 1));
        jTextField8.setText((String)model3.getValueAt(row, 2));
        jButton11.setVisible(true);
    }//GEN-LAST:event_jTable4MouseClicked

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        temp = 0;
        sound();
        new Home_Page().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        temp = 0;
        sound();
        new Home_Page().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        temp = 0;
        sound();     
        new Home_Page().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        temp = 0;
        sound();
        new Home_Page().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        temp = 0;
        sound();       
        new Home_Page().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        jTextField1.setText("");
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jButton14KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton14KeyReleased
        temp = 0;
        sound();
        new Home_Page().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton14KeyReleased

    private void jButton3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyReleased
            temp = 1;
            sound();    
            model.setRowCount(0);
            
            new Database_Connection();
            
            try
            {
                int count=0;
                Statement s = Database_Connection.con.createStatement();
                ResultSet rs = s.executeQuery("select * from user_info ");
                while(rs.next())
                {
                    model.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("age") , rs.getString("gender")});
                    count++;
                }
                if(count  ==0)
                {
                    JOptionPane.showMessageDialog(null, "No Results Found");
                }
                else
                {
                    jScrollPane1.setVisible(true);
                    JOptionPane.showMessageDialog(null, "Check your results in table");
                }   
            }
            catch(Exception e)
            {
                System.out.println("Error because of: "+e);
            }
    }//GEN-LAST:event_jButton3KeyReleased

    private void jButton1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyReleased
        temp = 1;
        sound();

        if(jTextField1.getText().equals("")  || jTextField1.getText().equals("Enter Text here"))
        {
            JOptionPane.showMessageDialog(null, "Please Enter Name of the user");
        }
        else
        {
            model.setRowCount(0);
            
            new Database_Connection();
            
            try
            {
                int count=0;
                Statement s = Database_Connection.con.createStatement();
                ResultSet rs = s.executeQuery("select * from user_info where Name Like '"+jTextField1.getText()+"%' ");
                while(rs.next())
                {
                    model.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("age") , rs.getString("gender")});
                    count++;
                }
                if(count  ==0)
                {
                    JOptionPane.showMessageDialog(null, "No Results Found");
                }
                else
                {
                    jScrollPane1.setVisible(true);
                    JOptionPane.showMessageDialog(null, "Check your results in table");
                }   
            }
            catch(Exception e)
            {
                System.out.println("Error because of: "+e);
            }
        }
    }//GEN-LAST:event_jButton1KeyReleased

    private void jButton2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyReleased
        temp = 1;
        sound();
        
        new Database_Connection();
        try
        {
            int row = jTable1.getSelectedRow();
            String User_No = (String)model.getValueAt(row, 0);
            Statement s = Database_Connection.con.createStatement();
            ResultSet rs = s.executeQuery("select * from user_status where User_No = '"+User_No+"' ");
            while(rs.next())
            {
                jLabel7.setText(rs.getString("User_NO"));
                jLabel9.setText(rs.getString("games_played"));
                jLabel11.setText(rs.getString("status"));
            }        
            jPanel1.setVisible(true);
        }
        catch(Exception e)
        {
            System.out.println("Error because of: "+e);
        }
    }//GEN-LAST:event_jButton2KeyReleased

    private void jButton15KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton15KeyReleased
        temp = 0;
        sound();
        new Home_Page().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton15KeyReleased

    private void jButton4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyReleased
        if(jTextField2.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter your Name");
        }
        else if(jTextField3.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter your Age");
        }
        else if(!jRadioButton1.isSelected() && !jRadioButton2.isSelected())
        {
            JOptionPane.showMessageDialog(null, "Please Select your gender");
        }
        else
        {
            temp = 1;
            sound();
            
            int count = 10001 , games_played=0;
            String gender , status="Not Started";
            if(jRadioButton1.isSelected())
            {
                gender = "Male";
            }
            else
            {
                gender = "Female";
            }
            
            new Database_Connection();
            try
            {
                Statement s = Database_Connection.con.createStatement();
                
                ResultSet rs = s.executeQuery("Select * from user_info");
                while(rs.next())
                {
                    count++;
                }
                s.executeUpdate(" insert into user_info(User_No , Name , age ,gender ) values ('"+count+"' ,'"+jTextField2.getText()+"' , '"+jTextField3.getText()+"' , '"+gender+"') ");
                s.executeUpdate(" insert into user_status(User_No , games_played , status ) values ('"+count+"' , '"+games_played+"' , '"+status+"' ) ");
                JOptionPane.showMessageDialog(null,"Your User_No is: "+count + ". Keep it remember");
                
                jTextField2.setText("");
                jTextField3.setText("");
                jRadioButton1.setSelected(false);
                jRadioButton2.setSelected(false);      
            }
            catch(Exception e)
            {
                System.out.println("Error because of: "+e);
            }        
        }
    }//GEN-LAST:event_jButton4KeyReleased

    private void jButton16KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton16KeyReleased
        temp = 0;
        sound();       
        new Home_Page().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton16KeyReleased

    private void jButton5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton5KeyReleased
        temp = 1;
        sound();     
            model1.setRowCount(0);
            
            new Database_Connection();
            
            try
            {
                int count=0;
                Statement s = Database_Connection.con.createStatement();
                ResultSet rs = s.executeQuery("select * from user_info ");
                while(rs.next())
                {
                    model1.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("age") , rs.getString("gender")});
                    count++;
                }
                if(count  ==0)
                {
                    JOptionPane.showMessageDialog(null, "No Results Found");
                }
                else
                {
                    jScrollPane1.setVisible(true);
                    JOptionPane.showMessageDialog(null, "Check your results in table");
                }   
            }
            catch(Exception e)
            {
                System.out.println("Error because of: "+e);
            }
    }//GEN-LAST:event_jButton5KeyReleased

    private void jButton6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton6KeyReleased
        temp = 1;
        sound();
        
        int row = jTable2.getSelectedRow();
        String User_No = (String)model1.getValueAt(row, 0);
        int count= 0; 
        
        new Database_Connection();
        try
        {
            Statement s = Database_Connection.con.createStatement();          
            s.executeUpdate("delete   from user_info  where User_No = '"+User_No+"' ");        
            s.executeUpdate("delete   from user_status  where User_No = '"+User_No+"' ");
          
            model1.setRowCount(0);          
            ResultSet rs = s.executeQuery("select * from user_info");
            while(rs.next())
            {
                model1.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("age") , rs.getString("gender")});
                count++;
            }
            if(count==0)
            {
                JOptionPane.showMessageDialog(null, "Table is Empty now");
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Check updated results in table");
            }
        }
        catch(Exception e)
        {
            System.out.println("Error because of: "+e);
        }
    }//GEN-LAST:event_jButton6KeyReleased

    private void jButton17KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton17KeyReleased
        temp = 0;
        sound();
        new Home_Page().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton17KeyReleased

    private void jButton7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton7KeyReleased
        temp = 1;
        sound();    
        model2.setRowCount(0);

        new Database_Connection();

        try
        {
            int count=0;
            Statement s = Database_Connection.con.createStatement();
            ResultSet rs = s.executeQuery("select * from user_info ");
            while(rs.next())
            {
                model2.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("age") , rs.getString("gender")});
                count++;
            }
            if(count  ==0)
            {
                JOptionPane.showMessageDialog(null, "No Results Found");
            }
            else
            {
                jScrollPane1.setVisible(true);
                JOptionPane.showMessageDialog(null, "Check your results in table");
            }   
        }
        catch(Exception e)
        {
            System.out.println("Error because of: "+e);
        }
    }//GEN-LAST:event_jButton7KeyReleased

    private void jButton9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton9KeyReleased
        temp = 1;
        sound();
        
        if(jTextField4.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter your Name");
        }
        else if(jTextField5.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter your Age");
        }
        else if(!jRadioButton3.isSelected() && !jRadioButton4.isSelected())
        {
            JOptionPane.showMessageDialog(null, "Please Select your gender");
        }
        else
        {
            String gender;
            int row = jTable3.getSelectedRow();
            String User_No = (String)model2.getValueAt(row, 0);
            new Database_Connection();
            if(jRadioButton3.isSelected())
            {
                gender = "Male";
            }
            else
            {
                gender = "Female";
            }
            try
            {
                Statement s = Database_Connection.con.createStatement();

                s.executeUpdate("update user_info set Name = '"+jTextField4.getText()+"' , Age = '"+jTextField5.getText()+"' , gender = '"+gender+"' where user_no = '"+User_No+"' ");

                model2.setRowCount(0);          
                ResultSet rs = s.executeQuery("select * from user_info");
                while(rs.next())
                {
                    model2.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("age") , rs.getString("gender")});
                }
                JOptionPane.showMessageDialog(null, "Check updated results in table");
            }
            catch(Exception e)
            {
                System.err.println("Error because of : "+e);
            }
        }
    }//GEN-LAST:event_jButton9KeyReleased

    private void jButton18KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton18KeyReleased
        temp = 0;
        sound();
        new Home_Page().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton18KeyReleased

    private void jButton10KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton10KeyReleased
        temp = 1;
        sound();    
        model3.setRowCount(0);

        new Database_Connection();

        try
        {
            int count=0;
            Statement s = Database_Connection.con.createStatement();
            ResultSet rs = s.executeQuery("select * from admin_info ");
            while(rs.next())
            {
                model3.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("Password") });
                count++;
            }
            if(count  ==0)
            {
                JOptionPane.showMessageDialog(null, "No Results Found");
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Check your results in table");
            }   
        }
        catch(Exception e)
        {
            System.out.println("Error because of: "+e);
        }
    }//GEN-LAST:event_jButton10KeyReleased

    private void jButton8KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton8KeyReleased
        temp = 1;
        sound();       
        jPanel9.setVisible(true);
            jButton11.setText("Add");
    }//GEN-LAST:event_jButton8KeyReleased

    private void jButton12KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton12KeyReleased
        temp = 1;
        sound();
        jPanel9.setVisible(true);
        jButton11.setText("Update");
    }//GEN-LAST:event_jButton12KeyReleased

    private void jButton13KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton13KeyReleased
        temp = 1;
        sound();
        
        int row_count = jTable4.getRowCount();
        if(row_count <= 1)
        {
            JOptionPane.showMessageDialog(null, "You cannot remove all admin accounts");
        }
        else
        {
            int row = jTable4.getSelectedRow();
            String User_No = (String)model3.getValueAt(row, 0);

            new Database_Connection();
            try
            {
                Statement s = Database_Connection.con.createStatement();          
                s.executeUpdate("delete   from admin_info  where User_No = '"+User_No+"' ");        

                model3.setRowCount(0);          
                ResultSet rs = s.executeQuery("select * from admin_info");
                while(rs.next())
                {
                    model3.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("password") });  
                }
                JOptionPane.showMessageDialog(null, "Check updated results in table");
            }
            catch(Exception e)
            {
                System.out.println("Error because of: "+e);
            }
        }
    }//GEN-LAST:event_jButton13KeyReleased

    private void jButton11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton11KeyReleased
        if(jButton11.getText().equals("Add"))
        {
            if(jTextField6.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please enter your User_No");
            }
            else if(jTextField7.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please enter your Name");
            }
            else if(jTextField8.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please enter your Password");
            }
            else
            {
                temp = 1;
                sound();
            
                new Database_Connection();
                try
                {
                    Statement s = Database_Connection.con.createStatement();

                    s.executeUpdate(" insert into admin_info(User_No , Name , password ) values ('"+jTextField6.getText()+"' ,'"+jTextField7.getText()+"' , '"+jTextField8.getText()+"' ) ");
                    JOptionPane.showMessageDialog(null,"New Admin Added");
                    
                    model3.setRowCount(0);
                    ResultSet rs = s.executeQuery("select * from admin_info ");
                    while(rs.next())
                    {
                        model3.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("Password") });
                    }
                    
                    jTextField6.setText("");
                    jTextField7.setText("");
                    jTextField8.setText("");

                }
                catch(Exception e)
                {
                    System.out.println("Error because of: "+e);
                }        
            }
        }
        if(jButton11.getText().equals("Update"))
        {
            int row = jTable4.getSelectedRow();
            String User_No = (String)model3.getValueAt(row, 0);
            
            new Database_Connection();
            try
            {
                Statement s = Database_Connection.con.createStatement();
                s.executeUpdate("update admin_info set User_No = '"+jTextField6.getText()+"' , name = '"+jTextField7.getText()+"' , password = '"+jTextField8.getText()+"' where user_no = '"+User_No+"' ");

                model3.setRowCount(0);          
                ResultSet rs = s.executeQuery("select * from admin_info");
                while(rs.next())
                {
                    model3.addRow(new Object[] {rs.getString("User_No") , rs.getString("Name") , rs.getString("password") });
                }
                
                jTextField6.setText("");
                jTextField7.setText("");
                jTextField8.setText(""); 
                JOptionPane.showMessageDialog(null, "Check updated results in table");
            }
            catch(Exception e)
            {
                System.err.println("Error because of: "+e);
            }
        }
    }//GEN-LAST:event_jButton11KeyReleased

    void sound()
    {
       try {
         // Open an audio input stream.
         URL url;
         if(temp == 0)
         {
             url = this.getClass().getClassLoader().getResource("Exit.wav");
         }
         else
         {
             url = this.getClass().getClassLoader().getResource("Gun.wav");
         }
         AudioInputStream audioIn = AudioSystem.getAudioInputStream(url);
         // Get a sound clip resource.
         Clip clip = AudioSystem.getClip();
         // Open audio clip and load samples from the audio input stream.
         clip.open(audioIn);
         clip.start();
      }
       catch(Exception e)
       {
           System.err.println("Error because of: "+e);
       }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_view().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
}